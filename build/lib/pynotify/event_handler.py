#!/usr/bin/env python
from typing import Protocol

from . import Event, EventType


class EventHandler(Protocol):
    """Outlines an EventHandler_ object. 

       Conforming objects can be added to a Notifier_ instance via
       :func:`Notifier.add_watch`.
    """

    def handle_event(self, event: Event) -> None:
        """Handle the provided Event_ *event*

           :param event: An Event_ generated by the corresponding watch
                         added with :func:`Notifier.add_watch`
        """

    def can_handle_event_type(self, type: EventType) -> bool:
        """A method required by a Notifier_ to query this EventHandler_
           on whether it can handle the provided EventType_ *type*

           :param type: EventType_ to be handled

           :return bool: :data:`True` if this EventHandler_ can handle the 
                         provided EventType_ *type*
        """
